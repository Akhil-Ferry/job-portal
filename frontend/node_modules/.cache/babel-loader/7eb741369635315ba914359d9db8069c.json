{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akhil\\\\OneDrive\\\\Desktop\\\\project\\\\job-portal-system\\\\frontend\\\\src\\\\components\\\\JobForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createJob, updateJob } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobForm = ({\n  job,\n  onSubmit\n}) => {\n  _s();\n  var _job$salary, _job$salary2;\n  const [title, setTitle] = useState(job ? job.title : '');\n  const [company, setCompany] = useState(job ? job.company : '');\n  const [location, setLocation] = useState(job ? job.location : '');\n  const [customLocation, setCustomLocation] = useState('');\n  const [description, setDescription] = useState(job ? job.description : '');\n  const [requirements, setRequirements] = useState(job ? job.requirements.join('\\n') : '');\n  const [salaryMin, setSalaryMin] = useState(job ? (_job$salary = job.salary) === null || _job$salary === void 0 ? void 0 : _job$salary.min : '');\n  const [salaryMax, setSalaryMax] = useState(job ? (_job$salary2 = job.salary) === null || _job$salary2 === void 0 ? void 0 : _job$salary2.max : '');\n  const [skills, setSkills] = useState(job ? job.skills.join(',') : '');\n  const [selectedIndustry, setSelectedIndustry] = useState(job ? job.industry : 'Technology');\n  const [employmentType, setEmploymentType] = useState(job ? job.employmentType : 'Full-time');\n  const [showCustomLocation, setShowCustomLocation] = useState(false);\n\n  // Indian locations for dropdown\n  const indianLocations = [\"Bangalore, Karnataka\", \"Mumbai, Maharashtra\", \"Delhi NCR\", \"Hyderabad, Telangana\", \"Chennai, Tamil Nadu\", \"Pune, Maharashtra\", \"Kolkata, West Bengal\", \"Ahmedabad, Gujarat\", \"Jaipur, Rajasthan\", \"Chandigarh\", \"Kochi, Kerala\", \"Indore, Madhya Pradesh\", \"Coimbatore, Tamil Nadu\", \"Gurgaon, Haryana\", \"Noida, Uttar Pradesh\", \"Other\"];\n\n  // Industry options\n  const industries = [\"Technology\", \"IT Services\", \"E-commerce\", \"Healthcare\", \"Finance\", \"Education\", \"Manufacturing\", \"Retail\", \"Telecom\", \"Consulting\", \"FMCG\", \"Other\"];\n\n  // Employment types\n  const employmentTypes = [\"Full-time\", \"Part-time\", \"Contract\", \"Temporary\", \"Internship\", \"Remote\"];\n\n  // Handle location selection\n  const handleLocationChange = e => {\n    const selectedValue = e.target.value;\n    setLocation(selectedValue);\n    if (selectedValue === \"Other\") {\n      setShowCustomLocation(true);\n      setLocation('');\n    } else {\n      setShowCustomLocation(false);\n      setCustomLocation('');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Use custom location if \"Other\" is selected\n    const finalLocation = location || customLocation;\n    const jobData = {\n      title,\n      company,\n      location: finalLocation,\n      description,\n      requirements: requirements.split('\\n').map(r => r.trim()).filter(Boolean),\n      salary: {\n        min: Number(salaryMin),\n        max: Number(salaryMax)\n      },\n      skills: skills.split(',').map(s => s.trim()).filter(Boolean),\n      industry: selectedIndustry,\n      employmentType\n    };\n    try {\n      if (job) {\n        await updateJob(job._id, jobData);\n      } else {\n        await createJob(jobData);\n      }\n      onSubmit();\n    } catch (error) {\n      console.error('Error submitting job form:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"job-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: job ? 'Edit Job Listing' : 'Post a New Job'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Job Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Job Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Company:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: company,\n          onChange: e => setCompany(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Industry:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedIndustry,\n          onChange: e => setSelectedIndustry(e.target.value),\n          children: industries.map(industry => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: industry,\n            children: industry\n          }, industry, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Employment Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: employmentType,\n          onChange: e => setEmploymentType(e.target.value),\n          children: employmentTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type,\n            children: type\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: location,\n          onChange: handleLocationChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select Location --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), indianLocations.map(loc => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: loc,\n            children: loc\n          }, loc, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), showCustomLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Specify Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: customLocation,\n          onChange: e => setCustomLocation(e.target.value),\n          placeholder: \"Enter city, state\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Job Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          rows: \"6\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Requirements & Skills\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Requirements (one per line):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: requirements,\n          onChange: e => setRequirements(e.target.value),\n          rows: \"4\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Skills (comma separated):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: skills,\n          onChange: e => setSkills(e.target.value),\n          placeholder: \"JavaScript, React, Node.js, etc.\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Compensation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"salary-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Minimum Salary (\\u20B9):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: salaryMin,\n            onChange: e => setSalaryMin(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Maximum Salary (\\u20B9):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: salaryMax,\n            onChange: e => setSalaryMax(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"primary-btn\",\n        children: job ? 'Update Job' : 'Post Job'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n_s(JobForm, \"LR8mZAOnzhAgwK2qAECFkZQYZtM=\");\n_c = JobForm;\nexport default JobForm;\nvar _c;\n$RefreshReg$(_c, \"JobForm\");","map":{"version":3,"names":["React","useState","createJob","updateJob","jsxDEV","_jsxDEV","JobForm","job","onSubmit","_s","_job$salary","_job$salary2","title","setTitle","company","setCompany","location","setLocation","customLocation","setCustomLocation","description","setDescription","requirements","setRequirements","join","salaryMin","setSalaryMin","salary","min","salaryMax","setSalaryMax","max","skills","setSkills","selectedIndustry","setSelectedIndustry","industry","employmentType","setEmploymentType","showCustomLocation","setShowCustomLocation","indianLocations","industries","employmentTypes","handleLocationChange","e","selectedValue","target","value","handleSubmit","preventDefault","finalLocation","jobData","split","map","r","trim","filter","Boolean","Number","s","_id","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","required","loc","placeholder","rows","_c","$RefreshReg$"],"sources":["C:/Users/akhil/OneDrive/Desktop/project/job-portal-system/frontend/src/components/JobForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { createJob, updateJob } from '../services/api';\n\nconst JobForm = ({ job, onSubmit }) => {\n    const [title, setTitle] = useState(job ? job.title : '');\n    const [company, setCompany] = useState(job ? job.company : '');\n    const [location, setLocation] = useState(job ? job.location : '');\n    const [customLocation, setCustomLocation] = useState('');\n    const [description, setDescription] = useState(job ? job.description : '');\n    const [requirements, setRequirements] = useState(job ? job.requirements.join('\\n') : '');\n    const [salaryMin, setSalaryMin] = useState(job ? job.salary?.min : '');\n    const [salaryMax, setSalaryMax] = useState(job ? job.salary?.max : '');\n    const [skills, setSkills] = useState(job ? job.skills.join(',') : '');\n    const [selectedIndustry, setSelectedIndustry] = useState(job ? job.industry : 'Technology');\n    const [employmentType, setEmploymentType] = useState(job ? job.employmentType : 'Full-time');\n    const [showCustomLocation, setShowCustomLocation] = useState(false);\n    \n    // Indian locations for dropdown\n    const indianLocations = [\n        \"Bangalore, Karnataka\", \n        \"Mumbai, Maharashtra\", \n        \"Delhi NCR\", \n        \"Hyderabad, Telangana\", \n        \"Chennai, Tamil Nadu\",\n        \"Pune, Maharashtra\", \n        \"Kolkata, West Bengal\", \n        \"Ahmedabad, Gujarat\", \n        \"Jaipur, Rajasthan\",\n        \"Chandigarh\", \n        \"Kochi, Kerala\", \n        \"Indore, Madhya Pradesh\", \n        \"Coimbatore, Tamil Nadu\",\n        \"Gurgaon, Haryana\",\n        \"Noida, Uttar Pradesh\",\n        \"Other\"\n    ];\n    \n    // Industry options\n    const industries = [\n        \"Technology\", \n        \"IT Services\",\n        \"E-commerce\", \n        \"Healthcare\", \n        \"Finance\", \n        \"Education\", \n        \"Manufacturing\",\n        \"Retail\", \n        \"Telecom\",\n        \"Consulting\",\n        \"FMCG\",\n        \"Other\"\n    ];\n    \n    // Employment types\n    const employmentTypes = [\n        \"Full-time\", \n        \"Part-time\", \n        \"Contract\", \n        \"Temporary\", \n        \"Internship\", \n        \"Remote\"\n    ];\n\n    // Handle location selection\n    const handleLocationChange = (e) => {\n        const selectedValue = e.target.value;\n        setLocation(selectedValue);\n        \n        if (selectedValue === \"Other\") {\n            setShowCustomLocation(true);\n            setLocation('');\n        } else {\n            setShowCustomLocation(false);\n            setCustomLocation('');\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        \n        // Use custom location if \"Other\" is selected\n        const finalLocation = location || customLocation;\n        \n        const jobData = {\n            title,\n            company,\n            location: finalLocation,\n            description,\n            requirements: requirements.split('\\n').map(r => r.trim()).filter(Boolean),\n            salary: { min: Number(salaryMin), max: Number(salaryMax) },\n            skills: skills.split(',').map(s => s.trim()).filter(Boolean),\n            industry: selectedIndustry,\n            employmentType\n        };\n        \n        try {\n            if (job) {\n                await updateJob(job._id, jobData);\n            } else {\n                await createJob(jobData);\n            }\n            onSubmit();\n        } catch (error) {\n            console.error('Error submitting job form:', error);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit} className=\"job-form\">\n            <h2>{job ? 'Edit Job Listing' : 'Post a New Job'}</h2>\n\n            <div className=\"form-section\">\n                <h3>Job Details</h3>\n                <div>\n                    <label>Job Title:</label>\n                    <input type=\"text\" value={title} onChange={e => setTitle(e.target.value)} required />\n                </div>\n                \n                <div>\n                    <label>Company:</label>\n                    <input type=\"text\" value={company} onChange={e => setCompany(e.target.value)} required />\n                </div>\n                \n                <div>\n                    <label>Industry:</label>\n                    <select value={selectedIndustry} onChange={e => setSelectedIndustry(e.target.value)}>\n                        {industries.map(industry => (\n                            <option key={industry} value={industry}>{industry}</option>\n                        ))}\n                    </select>\n                </div>\n                \n                <div>\n                    <label>Employment Type:</label>\n                    <select value={employmentType} onChange={e => setEmploymentType(e.target.value)}>\n                        {employmentTypes.map(type => (\n                            <option key={type} value={type}>{type}</option>\n                        ))}\n                    </select>\n                </div>\n\n                <div>\n                    <label>Location:</label>\n                    <select value={location} onChange={handleLocationChange}>\n                        <option value=\"\">-- Select Location --</option>\n                        {indianLocations.map(loc => (\n                            <option key={loc} value={loc}>{loc}</option>\n                        ))}\n                    </select>\n                </div>\n\n                {showCustomLocation && (\n                    <div>\n                        <label>Specify Location:</label>\n                        <input \n                            type=\"text\" \n                            value={customLocation} \n                            onChange={e => setCustomLocation(e.target.value)}\n                            placeholder=\"Enter city, state\"\n                            required \n                        />\n                    </div>\n                )}\n            </div>\n\n            <div className=\"form-section\">\n                <h3>Job Description</h3>\n                <div>\n                    <label>Description:</label>\n                    <textarea \n                        value={description} \n                        onChange={e => setDescription(e.target.value)} \n                        rows=\"6\"\n                        required \n                    />\n                </div>\n            </div>\n\n            <div className=\"form-section\">\n                <h3>Requirements & Skills</h3>\n                <div>\n                    <label>Requirements (one per line):</label>\n                    <textarea \n                        value={requirements} \n                        onChange={e => setRequirements(e.target.value)} \n                        rows=\"4\"\n                        required \n                    />\n                </div>\n                \n                <div>\n                    <label>Skills (comma separated):</label>\n                    <input \n                        type=\"text\" \n                        value={skills} \n                        onChange={e => setSkills(e.target.value)}\n                        placeholder=\"JavaScript, React, Node.js, etc.\" \n                        required \n                    />\n                </div>\n            </div>\n\n            <div className=\"form-section\">\n                <h3>Compensation</h3>\n                <div className=\"salary-inputs\">\n                    <div>\n                        <label>Minimum Salary (₹):</label>\n                        <input \n                            type=\"number\" \n                            value={salaryMin} \n                            onChange={e => setSalaryMin(e.target.value)} \n                            required \n                        />\n                    </div>\n                    <div>\n                        <label>Maximum Salary (₹):</label>\n                        <input \n                            type=\"number\" \n                            value={salaryMax} \n                            onChange={e => setSalaryMax(e.target.value)} \n                            required \n                        />\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"form-actions\">\n                <button type=\"submit\" className=\"primary-btn\">\n                    {job ? 'Update Job' : 'Post Job'}\n                </button>\n            </div>\n        </form>\n    );\n};\n\nexport default JobForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}