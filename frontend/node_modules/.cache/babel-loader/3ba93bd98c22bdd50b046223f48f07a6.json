{"ast":null,"code":"import axios from 'axios';\nexport const API_URL = 'http://localhost:5000/api';\n\n// Job-related API calls\nexport const fetchJobs = async () => {\n  const response = await axios.get(`${API_URL}/jobs`);\n  return response.data;\n};\nexport const createJob = async jobData => {\n  const response = await axios.post(`${API_URL}/jobs`, jobData);\n  return response.data;\n};\nexport const updateJob = async (jobId, jobData) => {\n  const response = await axios.put(`${API_URL}/jobs/${jobId}`, jobData);\n  return response.data;\n};\nexport const deleteJob = async jobId => {\n  const response = await axios.delete(`${API_URL}/jobs/${jobId}`);\n  return response.data;\n};\n\n// Candidate-related API calls\nexport const fetchCandidates = async () => {\n  const response = await axios.get(`${API_URL}/candidates`);\n  return response.data;\n};\nexport const createCandidateProfile = async candidateData => {\n  const response = await axios.post(`${API_URL}/candidates`, candidateData);\n  return response.data;\n};\nexport const updateCandidateProfile = async (candidateId, candidateData) => {\n  const response = await axios.put(`${API_URL}/candidates/${candidateId}`, candidateData);\n  return response.data;\n};\nexport const getUserProfile = async () => {\n  const token = localStorage.getItem('token');\n  const response = await axios.get(`${API_URL}/candidates/profile`, {\n    headers: {\n      Authorization: token\n    }\n  });\n  return response.data;\n};\n\n// Application-related API calls\nexport const applyForJob = async applicationData => {\n  const response = await axios.post(`${API_URL}/applications`, applicationData);\n  return response.data;\n};\nexport const fetchApplications = async candidateId => {\n  const response = await axios.get(`${API_URL}/applications?candidateId=${candidateId}`);\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","fetchJobs","response","get","data","createJob","jobData","post","updateJob","jobId","put","deleteJob","delete","fetchCandidates","createCandidateProfile","candidateData","updateCandidateProfile","candidateId","getUserProfile","token","localStorage","getItem","headers","Authorization","applyForJob","applicationData","fetchApplications"],"sources":["C:/Users/akhil/OneDrive/Desktop/project/job-portal-system/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nexport const API_URL = 'http://localhost:5000/api';\n\n// Job-related API calls\nexport const fetchJobs = async () => {\n    const response = await axios.get(`${API_URL}/jobs`);\n    return response.data;\n};\n\nexport const createJob = async (jobData) => {\n    const response = await axios.post(`${API_URL}/jobs`, jobData);\n    return response.data;\n};\n\nexport const updateJob = async (jobId, jobData) => {\n    const response = await axios.put(`${API_URL}/jobs/${jobId}`, jobData);\n    return response.data;\n};\n\nexport const deleteJob = async (jobId) => {\n    const response = await axios.delete(`${API_URL}/jobs/${jobId}`);\n    return response.data;\n};\n\n// Candidate-related API calls\nexport const fetchCandidates = async () => {\n    const response = await axios.get(`${API_URL}/candidates`);\n    return response.data;\n};\n\nexport const createCandidateProfile = async (candidateData) => {\n    const response = await axios.post(`${API_URL}/candidates`, candidateData);\n    return response.data;\n};\n\nexport const updateCandidateProfile = async (candidateId, candidateData) => {\n    const response = await axios.put(`${API_URL}/candidates/${candidateId}`, candidateData);\n    return response.data;\n};\n\nexport const getUserProfile = async () => {\n    const token = localStorage.getItem('token');\n    const response = await axios.get(`${API_URL}/candidates/profile`, {\n        headers: { Authorization: token }\n    });\n    return response.data;\n};\n\n// Application-related API calls\nexport const applyForJob = async (applicationData) => {\n    const response = await axios.post(`${API_URL}/applications`, applicationData);\n    return response.data;\n};\n\nexport const fetchApplications = async (candidateId) => {\n    const response = await axios.get(`${API_URL}/applications?candidateId=${candidateId}`);\n    return response.data;\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,OAAO,GAAG,2BAA2B;;AAElD;AACA,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EACjC,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,OAAO,CAAC;EACnD,OAAOE,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAOC,OAAO,IAAK;EACxC,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACQ,IAAI,CAAC,GAAGP,OAAO,OAAO,EAAEM,OAAO,CAAC;EAC7D,OAAOJ,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMI,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEH,OAAO,KAAK;EAC/C,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACW,GAAG,CAAC,GAAGV,OAAO,SAASS,KAAK,EAAE,EAAEH,OAAO,CAAC;EACrE,OAAOJ,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMO,SAAS,GAAG,MAAOF,KAAK,IAAK;EACtC,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACa,MAAM,CAAC,GAAGZ,OAAO,SAASS,KAAK,EAAE,CAAC;EAC/D,OAAOP,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMS,eAAe,GAAG,MAAAA,CAAA,KAAY;EACvC,MAAMX,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,aAAa,CAAC;EACzD,OAAOE,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMU,sBAAsB,GAAG,MAAOC,aAAa,IAAK;EAC3D,MAAMb,QAAQ,GAAG,MAAMH,KAAK,CAACQ,IAAI,CAAC,GAAGP,OAAO,aAAa,EAAEe,aAAa,CAAC;EACzE,OAAOb,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMY,sBAAsB,GAAG,MAAAA,CAAOC,WAAW,EAAEF,aAAa,KAAK;EACxE,MAAMb,QAAQ,GAAG,MAAMH,KAAK,CAACW,GAAG,CAAC,GAAGV,OAAO,eAAeiB,WAAW,EAAE,EAAEF,aAAa,CAAC;EACvF,OAAOb,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMc,cAAc,GAAG,MAAAA,CAAA,KAAY;EACtC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMnB,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,qBAAqB,EAAE;IAC9DsB,OAAO,EAAE;MAAEC,aAAa,EAAEJ;IAAM;EACpC,CAAC,CAAC;EACF,OAAOjB,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMoB,WAAW,GAAG,MAAOC,eAAe,IAAK;EAClD,MAAMvB,QAAQ,GAAG,MAAMH,KAAK,CAACQ,IAAI,CAAC,GAAGP,OAAO,eAAe,EAAEyB,eAAe,CAAC;EAC7E,OAAOvB,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMsB,iBAAiB,GAAG,MAAOT,WAAW,IAAK;EACpD,MAAMf,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,6BAA6BiB,WAAW,EAAE,CAAC;EACtF,OAAOf,QAAQ,CAACE,IAAI;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}