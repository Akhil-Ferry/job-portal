{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akhil\\\\OneDrive\\\\Desktop\\\\project\\\\job-portal-system\\\\frontend\\\\src\\\\pages\\\\Jobs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchJobs, applyForJob } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Jobs = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Search and filter state\n  const [searchTerm, setSearchTerm] = useState('');\n  const [location, setLocation] = useState('');\n  const [customLocation, setCustomLocation] = useState('');\n  const [industry, setIndustry] = useState('');\n  const [employmentType, setEmploymentType] = useState('');\n  const [minSalary, setMinSalary] = useState('');\n  const [maxSalary, setMaxSalary] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [showCustomLocation, setShowCustomLocation] = useState(false);\n\n  // Indian locations for dropdown\n  const indianLocations = [\"All Locations\", \"Bangalore, Karnataka\", \"Mumbai, Maharashtra\", \"Delhi NCR\", \"Hyderabad, Telangana\", \"Chennai, Tamil Nadu\", \"Pune, Maharashtra\", \"Kolkata, West Bengal\", \"Ahmedabad, Gujarat\", \"Other\"];\n\n  // Industry options\n  const industries = [\"All Industries\", \"Technology\", \"IT Services\", \"E-commerce\", \"Healthcare\", \"Finance\", \"Education\", \"Manufacturing\"];\n\n  // Employment types\n  const employmentTypes = [\"All Types\", \"Full-time\", \"Part-time\", \"Contract\", \"Internship\", \"Remote\"];\n\n  // Handle location selection\n  const handleLocationChange = e => {\n    const selectedValue = e.target.value;\n    if (selectedValue === \"Other\") {\n      setShowCustomLocation(true);\n      setLocation('');\n    } else {\n      setShowCustomLocation(false);\n      setCustomLocation('');\n      setLocation(selectedValue);\n    }\n  };\n  useEffect(() => {\n    const fetchJobsData = async () => {\n      try {\n        setLoading(true);\n        const queryParams = new URLSearchParams();\n        if (searchTerm) queryParams.append('search', searchTerm);\n\n        // Use either selected location or custom location\n        const finalLocation = location === \"All Locations\" ? '' : location || customLocation;\n        if (finalLocation) queryParams.append('location', finalLocation);\n        if (industry && industry !== 'All Industries') queryParams.append('industry', industry);\n        if (employmentType && employmentType !== 'All Types') queryParams.append('employmentType', employmentType);\n        if (minSalary) queryParams.append('minSalary', minSalary);\n        if (maxSalary) queryParams.append('maxSalary', maxSalary);\n        queryParams.append('page', currentPage);\n        queryParams.append('limit', 10);\n        const data = await fetchJobs(`?${queryParams.toString()}`);\n        setJobs(data.jobs || data);\n        setTotalPages(data.totalPages || 1);\n      } catch (err) {\n        setError('Failed to load jobs');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchJobsData();\n  }, [searchTerm, location, customLocation, industry, employmentType, minSalary, maxSalary, currentPage]);\n  const handleApply = async jobId => {\n    try {\n      const candidateId = localStorage.getItem('candidateId');\n      if (!candidateId) {\n        alert('Please login as a candidate to apply for jobs');\n        return;\n      }\n      await applyForJob({\n        jobId,\n        candidateId,\n        appliedDate: new Date(),\n        status: 'pending'\n      });\n      alert('Application submitted successfully!');\n    } catch (err) {\n      alert('Failed to apply for this job. Please try again.');\n      console.error(err);\n    }\n  };\n  const handleSearch = e => {\n    e.preventDefault();\n    setCurrentPage(1);\n  };\n  const handleClearFilters = () => {\n    setSearchTerm('');\n    setLocation('All Locations');\n    setCustomLocation('');\n    setShowCustomLocation(false);\n    setIndustry('All Industries');\n    setEmploymentType('All Types');\n    setMinSalary('');\n    setMaxSalary('');\n    setCurrentPage(1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jobs-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Job Listings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-filters\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value),\n            placeholder: \"Job title, skills, or keywords...\",\n            className: \"search-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"search-button\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filters-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Location:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: location,\n              onChange: handleLocationChange,\n              children: indianLocations.map(loc => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: loc,\n                children: loc\n              }, loc, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this), showCustomLocation && /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: customLocation,\n              onChange: e => setCustomLocation(e.target.value),\n              placeholder: \"Enter custom location\",\n              className: \"mt-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Industry:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: industry,\n              onChange: e => setIndustry(e.target.value),\n              children: industries.map(ind => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: ind,\n                children: ind\n              }, ind, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Employment Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: employmentType,\n              onChange: e => setEmploymentType(e.target.value),\n              children: employmentTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: type,\n                children: type\n              }, type, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Salary Range (\\u20B9):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"salary-range\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: minSalary,\n                onChange: e => setMinSalary(e.target.value),\n                placeholder: \"Min\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"to\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: maxSalary,\n                onChange: e => setMaxSalary(e.target.value),\n                placeholder: \"Max\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"primary-btn\",\n            children: \"Apply Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleClearFilters,\n            className: \"secondary-btn\",\n            children: \"Clear Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading jobs...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }, this) : jobs.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-results\",\n      children: \"No jobs found matching your criteria.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobs-grid\",\n      children: jobs.map(job => {\n        var _job$salary, _job$salary$min, _job$salary2, _job$salary2$max, _job$requirements, _job$requirements2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"job-title\",\n            children: job.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-company\",\n            children: job.company\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-location\",\n            children: job.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-salary\",\n            children: [\"\\u20B9\", (_job$salary = job.salary) === null || _job$salary === void 0 ? void 0 : (_job$salary$min = _job$salary.min) === null || _job$salary$min === void 0 ? void 0 : _job$salary$min.toLocaleString(), \" - \\u20B9\", (_job$salary2 = job.salary) === null || _job$salary2 === void 0 ? void 0 : (_job$salary2$max = _job$salary2.max) === null || _job$salary2$max === void 0 ? void 0 : _job$salary2$max.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-description\",\n            children: [job.description.substring(0, 150), \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-requirements\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Requirements:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [(_job$requirements = job.requirements) === null || _job$requirements === void 0 ? void 0 : _job$requirements.slice(0, 3).map((req, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: req\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 41\n              }, this)), ((_job$requirements2 = job.requirements) === null || _job$requirements2 === void 0 ? void 0 : _job$requirements2.length) > 3 && /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"...and more\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 70\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"apply-btn\",\n            onClick: () => handleApply(job._id),\n            children: \"Apply Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this)]\n        }, job._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(prev => Math.max(prev - 1, 1)),\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"page-indicator\",\n        children: [\"Page \", currentPage, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(prev => Math.min(prev + 1, totalPages)),\n        disabled: currentPage === totalPages,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n};\n_s(Jobs, \"9uyRnMIdWp5MmXlXz99zPk+ekl4=\");\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useState","useEffect","fetchJobs","applyForJob","jsxDEV","_jsxDEV","Jobs","_s","jobs","setJobs","loading","setLoading","error","setError","searchTerm","setSearchTerm","location","setLocation","customLocation","setCustomLocation","industry","setIndustry","employmentType","setEmploymentType","minSalary","setMinSalary","maxSalary","setMaxSalary","currentPage","setCurrentPage","totalPages","setTotalPages","showCustomLocation","setShowCustomLocation","indianLocations","industries","employmentTypes","handleLocationChange","e","selectedValue","target","value","fetchJobsData","queryParams","URLSearchParams","append","finalLocation","data","toString","err","console","handleApply","jobId","candidateId","localStorage","getItem","alert","appliedDate","Date","status","handleSearch","preventDefault","handleClearFilters","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","map","loc","ind","onClick","length","job","_job$salary","_job$salary$min","_job$salary2","_job$salary2$max","_job$requirements","_job$requirements2","title","company","salary","min","toLocaleString","max","description","substring","requirements","slice","req","i","_id","prev","Math","disabled","_c","$RefreshReg$"],"sources":["C:/Users/akhil/OneDrive/Desktop/project/job-portal-system/frontend/src/pages/Jobs.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchJobs, applyForJob } from '../services/api';\n\nconst Jobs = () => {\n    const [jobs, setJobs] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    \n    // Search and filter state\n    const [searchTerm, setSearchTerm] = useState('');\n    const [location, setLocation] = useState('');\n    const [customLocation, setCustomLocation] = useState('');\n    const [industry, setIndustry] = useState('');\n    const [employmentType, setEmploymentType] = useState('');\n    const [minSalary, setMinSalary] = useState('');\n    const [maxSalary, setMaxSalary] = useState('');\n    const [currentPage, setCurrentPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(1);\n    const [showCustomLocation, setShowCustomLocation] = useState(false);\n\n    // Indian locations for dropdown\n    const indianLocations = [\n        \"All Locations\",\n        \"Bangalore, Karnataka\", \n        \"Mumbai, Maharashtra\", \n        \"Delhi NCR\", \n        \"Hyderabad, Telangana\", \n        \"Chennai, Tamil Nadu\",\n        \"Pune, Maharashtra\", \n        \"Kolkata, West Bengal\", \n        \"Ahmedabad, Gujarat\", \n        \"Other\"\n    ];\n    \n    // Industry options\n    const industries = [\n        \"All Industries\", \n        \"Technology\", \n        \"IT Services\",\n        \"E-commerce\", \n        \"Healthcare\", \n        \"Finance\", \n        \"Education\", \n        \"Manufacturing\"\n    ];\n    \n    // Employment types\n    const employmentTypes = [\n        \"All Types\", \n        \"Full-time\", \n        \"Part-time\", \n        \"Contract\", \n        \"Internship\", \n        \"Remote\"\n    ];\n\n    // Handle location selection\n    const handleLocationChange = (e) => {\n        const selectedValue = e.target.value;\n        \n        if (selectedValue === \"Other\") {\n            setShowCustomLocation(true);\n            setLocation('');\n        } else {\n            setShowCustomLocation(false);\n            setCustomLocation('');\n            setLocation(selectedValue);\n        }\n    };\n\n    useEffect(() => {\n        const fetchJobsData = async () => {\n            try {\n                setLoading(true);\n                const queryParams = new URLSearchParams();\n                \n                if (searchTerm) queryParams.append('search', searchTerm);\n                \n                // Use either selected location or custom location\n                const finalLocation = location === \"All Locations\" ? '' : (location || customLocation);\n                if (finalLocation) queryParams.append('location', finalLocation);\n                \n                if (industry && industry !== 'All Industries') queryParams.append('industry', industry);\n                if (employmentType && employmentType !== 'All Types') queryParams.append('employmentType', employmentType);\n                if (minSalary) queryParams.append('minSalary', minSalary);\n                if (maxSalary) queryParams.append('maxSalary', maxSalary);\n                queryParams.append('page', currentPage);\n                queryParams.append('limit', 10);\n                \n                const data = await fetchJobs(`?${queryParams.toString()}`);\n                \n                setJobs(data.jobs || data);\n                setTotalPages(data.totalPages || 1);\n            } catch (err) {\n                setError('Failed to load jobs');\n                console.error(err);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchJobsData();\n    }, [searchTerm, location, customLocation, industry, employmentType, minSalary, maxSalary, currentPage]);\n\n    const handleApply = async (jobId) => {\n        try {\n            const candidateId = localStorage.getItem('candidateId');\n            if (!candidateId) {\n                alert('Please login as a candidate to apply for jobs');\n                return;\n            }\n            \n            await applyForJob({\n                jobId,\n                candidateId,\n                appliedDate: new Date(),\n                status: 'pending'\n            });\n            \n            alert('Application submitted successfully!');\n        } catch (err) {\n            alert('Failed to apply for this job. Please try again.');\n            console.error(err);\n        }\n    };\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        setCurrentPage(1);\n    };\n\n    const handleClearFilters = () => {\n        setSearchTerm('');\n        setLocation('All Locations');\n        setCustomLocation('');\n        setShowCustomLocation(false);\n        setIndustry('All Industries');\n        setEmploymentType('All Types');\n        setMinSalary('');\n        setMaxSalary('');\n        setCurrentPage(1);\n    };\n\n    return (\n        <div className=\"jobs-page\">\n            <h1>Job Listings</h1>\n            \n            <div className=\"search-filters\">\n                <form onSubmit={handleSearch}>\n                    <div className=\"search-bar\">\n                        <input \n                            type=\"text\" \n                            value={searchTerm}\n                            onChange={(e) => setSearchTerm(e.target.value)}\n                            placeholder=\"Job title, skills, or keywords...\"\n                            className=\"search-input\"\n                        />\n                        <button type=\"submit\" className=\"search-button\">Search</button>\n                    </div>\n                    \n                    <div className=\"filters-grid\">\n                        <div className=\"filter-item\">\n                            <label>Location:</label>\n                            <select \n                                value={location}\n                                onChange={handleLocationChange}\n                            >\n                                {indianLocations.map(loc => (\n                                    <option key={loc} value={loc}>{loc}</option>\n                                ))}\n                            </select>\n                            \n                            {showCustomLocation && (\n                                <input \n                                    type=\"text\" \n                                    value={customLocation}\n                                    onChange={(e) => setCustomLocation(e.target.value)}\n                                    placeholder=\"Enter custom location\"\n                                    className=\"mt-2\"\n                                />\n                            )}\n                        </div>\n                        \n                        <div className=\"filter-item\">\n                            <label>Industry:</label>\n                            <select \n                                value={industry}\n                                onChange={(e) => setIndustry(e.target.value)}\n                            >\n                                {industries.map(ind => (\n                                    <option key={ind} value={ind}>{ind}</option>\n                                ))}\n                            </select>\n                        </div>\n                        \n                        <div className=\"filter-item\">\n                            <label>Employment Type:</label>\n                            <select \n                                value={employmentType}\n                                onChange={(e) => setEmploymentType(e.target.value)}\n                            >\n                                {employmentTypes.map(type => (\n                                    <option key={type} value={type}>{type}</option>\n                                ))}\n                            </select>\n                        </div>\n                        \n                        <div className=\"filter-item\">\n                            <label>Salary Range (₹):</label>\n                            <div className=\"salary-range\">\n                                <input \n                                    type=\"number\" \n                                    value={minSalary}\n                                    onChange={(e) => setMinSalary(e.target.value)}\n                                    placeholder=\"Min\"\n                                />\n                                <span>to</span>\n                                <input \n                                    type=\"number\" \n                                    value={maxSalary}\n                                    onChange={(e) => setMaxSalary(e.target.value)}\n                                    placeholder=\"Max\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <div className=\"filter-actions\">\n                        <button type=\"submit\" className=\"primary-btn\">Apply Filters</button>\n                        <button type=\"button\" onClick={handleClearFilters} className=\"secondary-btn\">Clear Filters</button>\n                    </div>\n                </form>\n            </div>\n            \n            {loading ? (\n                <div className=\"loading\">Loading jobs...</div>\n            ) : error ? (\n                <div className=\"error-message\">{error}</div>\n            ) : jobs.length === 0 ? (\n                <div className=\"no-results\">No jobs found matching your criteria.</div>\n            ) : (\n                <div className=\"jobs-grid\">\n                    {jobs.map(job => (\n                        <div key={job._id} className=\"job-card\">\n                            <h2 className=\"job-title\">{job.title}</h2>\n                            <div className=\"job-company\">{job.company}</div>\n                            <div className=\"job-location\">{job.location}</div>\n                            <div className=\"job-salary\">\n                                ₹{job.salary?.min?.toLocaleString()} - ₹{job.salary?.max?.toLocaleString()}\n                            </div>\n                            <div className=\"job-description\">{job.description.substring(0, 150)}...</div>\n                            \n                            <div className=\"job-requirements\">\n                                <h4>Requirements:</h4>\n                                <ul>\n                                    {job.requirements?.slice(0, 3).map((req, i) => (\n                                        <li key={i}>{req}</li>\n                                    ))}\n                                    {job.requirements?.length > 3 && <li>...and more</li>}\n                                </ul>\n                            </div>\n                            \n                            <button \n                                className=\"apply-btn\"\n                                onClick={() => handleApply(job._id)}\n                            >\n                                Apply Now\n                            </button>\n                        </div>\n                    ))}\n                </div>\n            )}\n            \n            {totalPages > 1 && (\n                <div className=\"pagination\">\n                    <button \n                        onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\n                        disabled={currentPage === 1}\n                    >\n                        Previous\n                    </button>\n                    \n                    <span className=\"page-indicator\">\n                        Page {currentPage} of {totalPages}\n                    </span>\n                    \n                    <button \n                        onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\n                        disabled={currentPage === totalPages}\n                    >\n                        Next\n                    </button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Jobs;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}