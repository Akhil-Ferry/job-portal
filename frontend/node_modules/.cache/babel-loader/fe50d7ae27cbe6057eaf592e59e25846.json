{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akhil\\\\OneDrive\\\\Desktop\\\\project\\\\job-portal-system\\\\frontend\\\\src\\\\components\\\\AnalyticsDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Bar, Line, Doughnut, Pie } from 'react-chartjs-2';\nimport { API_URL } from '../services/api';\nimport { Chart, registerables } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nconst AnalyticsDashboard = () => {\n  _s();\n  var _analyticsData$jobsPe2, _analyticsData$inDema2, _analyticsData$jobsPe3;\n  const [analyticsData, setAnalyticsData] = useState({\n    jobsPerLocation: [],\n    inDemandSkills: [],\n    averageSalary: [],\n    jobsOverTime: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [timeFilter, setTimeFilter] = useState('all'); // 'week', 'month', 'year', 'all'\n\n  useEffect(() => {\n    const fetchAnalyticsData = async () => {\n      try {\n        setLoading(true);\n        const token = localStorage.getItem('token');\n        const response = await axios.get(`${API_URL}/jobs/analytics?timeframe=${timeFilter}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setAnalyticsData(response.data);\n        setError(null);\n      } catch (error) {\n        console.error('Error fetching analytics data:', error);\n        setError('Failed to load analytics data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAnalyticsData();\n  }, [timeFilter]);\n\n  // Generate colors for charts\n  const generateColors = count => {\n    const colors = ['rgba(54, 162, 235, 0.6)', 'rgba(255, 99, 132, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)', 'rgba(199, 199, 199, 0.6)', 'rgba(83, 102, 255, 0.6)', 'rgba(78, 205, 196, 0.6)', 'rgba(255, 99, 71, 0.6)'];\n    return Array.from({\n      length: count\n    }, (_, i) => colors[i % colors.length]);\n  };\n  const renderJobsPerLocationChart = () => {\n    var _analyticsData$jobsPe;\n    if (!((_analyticsData$jobsPe = analyticsData.jobsPerLocation) !== null && _analyticsData$jobsPe !== void 0 && _analyticsData$jobsPe.length)) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: \"No location data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 20\n    }, this);\n    const labels = analyticsData.jobsPerLocation.map(item => item._id);\n    const dataVals = analyticsData.jobsPerLocation.map(item => item.count);\n    const backgroundColor = generateColors(labels.length);\n    const data = {\n      labels,\n      datasets: [{\n        label: 'Jobs Posted per Location',\n        data: dataVals,\n        backgroundColor,\n        borderColor: backgroundColor.map(color => color.replace('0.6', '1')),\n        borderWidth: 1\n      }]\n    };\n    const options = {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: 'bottom'\n        },\n        title: {\n          display: true,\n          text: 'Job Distribution by Location'\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 16\n    }, this);\n  };\n  const renderInDemandSkillsChart = () => {\n    var _analyticsData$inDema;\n    if (!((_analyticsData$inDema = analyticsData.inDemandSkills) !== null && _analyticsData$inDema !== void 0 && _analyticsData$inDema.length)) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: \"No skills data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 20\n    }, this);\n    const labels = analyticsData.inDemandSkills.map(item => item._id);\n    const dataVals = analyticsData.inDemandSkills.map(item => item.count);\n    const backgroundColor = generateColors(labels.length);\n    const data = {\n      labels,\n      datasets: [{\n        label: 'Demand Count',\n        data: dataVals,\n        backgroundColor,\n        borderColor: backgroundColor.map(color => color.replace('0.6', '1')),\n        borderWidth: 1\n      }]\n    };\n    const options = {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: 'bottom'\n        },\n        title: {\n          display: true,\n          text: 'Most In-Demand Skills'\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 16\n    }, this);\n  };\n  const renderSalaryAnalysisChart = () => {\n    var _analyticsData$averag;\n    if (!((_analyticsData$averag = analyticsData.averageSalary) !== null && _analyticsData$averag !== void 0 && _analyticsData$averag.length)) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: \"No salary data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 20\n    }, this);\n    const labels = analyticsData.averageSalary.map(item => item._id);\n    const minSalaryData = analyticsData.averageSalary.map(item => item.avgMinSalary);\n    const maxSalaryData = analyticsData.averageSalary.map(item => item.avgMaxSalary);\n    const data = {\n      labels,\n      datasets: [{\n        label: 'Avg Min Salary',\n        data: minSalaryData,\n        backgroundColor: 'rgba(54, 162, 235, 0.6)',\n        borderColor: 'rgb(54, 162, 235)',\n        borderWidth: 1\n      }, {\n        label: 'Avg Max Salary',\n        data: maxSalaryData,\n        backgroundColor: 'rgba(255, 99, 132, 0.6)',\n        borderColor: 'rgb(255, 99, 132)',\n        borderWidth: 1\n      }]\n    };\n    const options = {\n      responsive: true,\n      scales: {\n        y: {\n          beginAtZero: true,\n          title: {\n            display: true,\n            text: 'Salary (USD)'\n          }\n        }\n      },\n      plugins: {\n        legend: {\n          position: 'bottom'\n        },\n        title: {\n          display: true,\n          text: 'Average Salary by Job Title'\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 16\n    }, this);\n  };\n  const renderJobsOverTimeChart = () => {\n    var _analyticsData$jobsOv;\n    if (!((_analyticsData$jobsOv = analyticsData.jobsOverTime) !== null && _analyticsData$jobsOv !== void 0 && _analyticsData$jobsOv.length)) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: \"No time-based data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 20\n    }, this);\n\n    // Format the date labels\n    const labels = analyticsData.jobsOverTime.map(item => {\n      const month = item._id.month;\n      const year = item._id.year;\n      return `${month}/${year}`;\n    });\n    const dataValues = analyticsData.jobsOverTime.map(item => item.count);\n    const data = {\n      labels,\n      datasets: [{\n        label: 'Jobs Posted',\n        data: dataValues,\n        fill: false,\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.1\n      }]\n    };\n    const options = {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: 'bottom'\n        },\n        title: {\n          display: true,\n          text: 'Job Posting Trends'\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 16\n    }, this);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analytics-loading\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading analytics data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 9\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analytics-error\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setTimeFilter(timeFilter),\n      children: \"Retry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analytics-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Analytics Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Time Period:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: timeFilter,\n          onChange: e => setTimeFilter(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"week\",\n            children: \"Past Week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"month\",\n            children: \"Past Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"year\",\n            children: \"Past Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analytics-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"summary-number\",\n          children: ((_analyticsData$jobsPe2 = analyticsData.jobsPerLocation) === null || _analyticsData$jobsPe2 === void 0 ? void 0 : _analyticsData$jobsPe2.reduce((sum, item) => sum + item.count, 0)) || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Unique Skills\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"summary-number\",\n          children: ((_analyticsData$inDema2 = analyticsData.inDemandSkills) === null || _analyticsData$inDema2 === void 0 ? void 0 : _analyticsData$inDema2.length) || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Locations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"summary-number\",\n          children: ((_analyticsData$jobsPe3 = analyticsData.jobsPerLocation) === null || _analyticsData$jobsPe3 === void 0 ? void 0 : _analyticsData$jobsPe3.length) || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Avg. Salary Range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"summary-number\",\n          children: [\"$\", analyticsData.averageSalary && analyticsData.averageSalary.length > 0 ? Math.round(analyticsData.averageSalary.reduce((acc, val) => acc + val.avgMinSalary, 0) / analyticsData.averageSalary.length).toLocaleString() : 0, \" - \", \"$\", analyticsData.averageSalary && analyticsData.averageSalary.length > 0 ? Math.round(analyticsData.averageSalary.reduce((acc, val) => acc + val.avgMaxSalary, 0) / analyticsData.averageSalary.length).toLocaleString() : 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Jobs by Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this), renderJobsPerLocationChart()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"In-Demand Skills\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this), renderInDemandSkillsChart()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Salary Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this), renderSalaryAnalysisChart()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Jobs Over Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this), renderJobsOverTimeChart()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 9\n  }, this);\n};\n_s(AnalyticsDashboard, \"RdCuG/P+zYFIEPiL/T/UqRGtEqQ=\");\n_c = AnalyticsDashboard;\nexport default AnalyticsDashboard;\nvar _c;\n$RefreshReg$(_c, \"AnalyticsDashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","Bar","Line","Doughnut","Pie","API_URL","Chart","registerables","jsxDEV","_jsxDEV","register","AnalyticsDashboard","_s","_analyticsData$jobsPe2","_analyticsData$inDema2","_analyticsData$jobsPe3","analyticsData","setAnalyticsData","jobsPerLocation","inDemandSkills","averageSalary","jobsOverTime","loading","setLoading","error","setError","timeFilter","setTimeFilter","fetchAnalyticsData","token","localStorage","getItem","response","get","headers","Authorization","data","console","generateColors","count","colors","Array","from","length","_","i","renderJobsPerLocationChart","_analyticsData$jobsPe","className","children","fileName","_jsxFileName","lineNumber","columnNumber","labels","map","item","_id","dataVals","backgroundColor","datasets","label","borderColor","color","replace","borderWidth","options","responsive","plugins","legend","position","title","display","text","renderInDemandSkillsChart","_analyticsData$inDema","renderSalaryAnalysisChart","_analyticsData$averag","minSalaryData","avgMinSalary","maxSalaryData","avgMaxSalary","scales","y","beginAtZero","renderJobsOverTimeChart","_analyticsData$jobsOv","month","year","dataValues","fill","tension","onClick","value","onChange","e","target","reduce","sum","Math","round","acc","val","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/akhil/OneDrive/Desktop/project/job-portal-system/frontend/src/components/AnalyticsDashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Bar, Line, Doughnut, Pie } from 'react-chartjs-2';\nimport { API_URL } from '../services/api';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\n\nconst AnalyticsDashboard = () => {\n    const [analyticsData, setAnalyticsData] = useState({\n        jobsPerLocation: [],\n        inDemandSkills: [],\n        averageSalary: [],\n        jobsOverTime: []\n    });\n    \n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [timeFilter, setTimeFilter] = useState('all'); // 'week', 'month', 'year', 'all'\n\n    useEffect(() => {\n        const fetchAnalyticsData = async () => {\n            try {\n                setLoading(true);\n                const token = localStorage.getItem('token');\n                \n                const response = await axios.get(`${API_URL}/jobs/analytics?timeframe=${timeFilter}`, {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                \n                setAnalyticsData(response.data);\n                setError(null);\n            } catch (error) {\n                console.error('Error fetching analytics data:', error);\n                setError('Failed to load analytics data. Please try again later.');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchAnalyticsData();\n    }, [timeFilter]);\n\n    // Generate colors for charts\n    const generateColors = (count) => {\n        const colors = [\n            'rgba(54, 162, 235, 0.6)', 'rgba(255, 99, 132, 0.6)', \n            'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)',\n            'rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)',\n            'rgba(199, 199, 199, 0.6)', 'rgba(83, 102, 255, 0.6)',\n            'rgba(78, 205, 196, 0.6)', 'rgba(255, 99, 71, 0.6)'\n        ];\n        return Array.from({ length: count }, (_, i) => colors[i % colors.length]);\n    };\n\n    const renderJobsPerLocationChart = () => {\n        if (!analyticsData.jobsPerLocation?.length) \n            return <div className=\"no-data\">No location data available</div>;\n\n        const labels = analyticsData.jobsPerLocation.map(item => item._id);\n        const dataVals = analyticsData.jobsPerLocation.map(item => item.count);\n        const backgroundColor = generateColors(labels.length);\n\n        const data = {\n            labels,\n            datasets: [\n                {\n                    label: 'Jobs Posted per Location',\n                    data: dataVals,\n                    backgroundColor,\n                    borderColor: backgroundColor.map(color => color.replace('0.6', '1')),\n                    borderWidth: 1\n                },\n            ],\n        };\n\n        const options = {\n            responsive: true,\n            plugins: {\n                legend: { position: 'bottom' },\n                title: { display: true, text: 'Job Distribution by Location' }\n            }\n        };\n\n        return <Bar data={data} options={options} />;\n    };\n\n    const renderInDemandSkillsChart = () => {\n        if (!analyticsData.inDemandSkills?.length) \n            return <div className=\"no-data\">No skills data available</div>;\n\n        const labels = analyticsData.inDemandSkills.map(item => item._id);\n        const dataVals = analyticsData.inDemandSkills.map(item => item.count);\n        const backgroundColor = generateColors(labels.length);\n\n        const data = {\n            labels,\n            datasets: [\n                {\n                    label: 'Demand Count',\n                    data: dataVals,\n                    backgroundColor,\n                    borderColor: backgroundColor.map(color => color.replace('0.6', '1')),\n                    borderWidth: 1\n                },\n            ],\n        };\n\n        const options = {\n            responsive: true,\n            plugins: {\n                legend: { position: 'bottom' },\n                title: { display: true, text: 'Most In-Demand Skills' }\n            }\n        };\n\n        return <Doughnut data={data} options={options} />;\n    };\n\n    const renderSalaryAnalysisChart = () => {\n        if (!analyticsData.averageSalary?.length) \n            return <div className=\"no-data\">No salary data available</div>;\n        \n        const labels = analyticsData.averageSalary.map(item => item._id);\n        const minSalaryData = analyticsData.averageSalary.map(item => item.avgMinSalary);\n        const maxSalaryData = analyticsData.averageSalary.map(item => item.avgMaxSalary);\n        \n        const data = {\n            labels,\n            datasets: [\n                {\n                    label: 'Avg Min Salary',\n                    data: minSalaryData,\n                    backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                    borderColor: 'rgb(54, 162, 235)',\n                    borderWidth: 1\n                },\n                {\n                    label: 'Avg Max Salary',\n                    data: maxSalaryData,\n                    backgroundColor: 'rgba(255, 99, 132, 0.6)',\n                    borderColor: 'rgb(255, 99, 132)',\n                    borderWidth: 1\n                }\n            ],\n        };\n        \n        const options = {\n            responsive: true,\n            scales: {\n                y: {\n                    beginAtZero: true,\n                    title: {\n                        display: true,\n                        text: 'Salary (USD)'\n                    }\n                }\n            },\n            plugins: {\n                legend: { position: 'bottom' },\n                title: { display: true, text: 'Average Salary by Job Title' }\n            }\n        };\n        \n        return <Bar data={data} options={options} />;\n    };\n\n    const renderJobsOverTimeChart = () => {\n        if (!analyticsData.jobsOverTime?.length) \n            return <div className=\"no-data\">No time-based data available</div>;\n        \n        // Format the date labels\n        const labels = analyticsData.jobsOverTime.map(item => {\n            const month = item._id.month;\n            const year = item._id.year;\n            return `${month}/${year}`;\n        });\n        \n        const dataValues = analyticsData.jobsOverTime.map(item => item.count);\n        \n        const data = {\n            labels,\n            datasets: [\n                {\n                    label: 'Jobs Posted',\n                    data: dataValues,\n                    fill: false,\n                    borderColor: 'rgb(75, 192, 192)',\n                    tension: 0.1\n                }\n            ]\n        };\n        \n        const options = {\n            responsive: true,\n            plugins: {\n                legend: { position: 'bottom' },\n                title: { display: true, text: 'Job Posting Trends' }\n            }\n        };\n        \n        return <Line data={data} options={options} />;\n    };\n\n    if (loading) return (\n        <div className=\"analytics-loading\">\n            <div className=\"spinner\"></div>\n            <p>Loading analytics data...</p>\n        </div>\n    );\n\n    if (error) return (\n        <div className=\"analytics-error\">\n            <p>{error}</p>\n            <button onClick={() => setTimeFilter(timeFilter)}>Retry</button>\n        </div>\n    );\n\n    return (\n        <div className=\"analytics-dashboard\">\n            <div className=\"analytics-header\">\n                <h1>Analytics Dashboard</h1>\n                <div className=\"filters\">\n                    <label>Time Period:</label>\n                    <select value={timeFilter} onChange={(e) => setTimeFilter(e.target.value)}>\n                        <option value=\"all\">All Time</option>\n                        <option value=\"week\">Past Week</option>\n                        <option value=\"month\">Past Month</option>\n                        <option value=\"year\">Past Year</option>\n                    </select>\n                </div>\n            </div>\n            \n            <div className=\"analytics-summary\">\n                <div className=\"summary-card\">\n                    <h3>Total Jobs</h3>\n                    <p className=\"summary-number\">\n                        {analyticsData.jobsPerLocation?.reduce((sum, item) => sum + item.count, 0) || 0}\n                    </p>\n                </div>\n                <div className=\"summary-card\">\n                    <h3>Unique Skills</h3>\n                    <p className=\"summary-number\">{analyticsData.inDemandSkills?.length || 0}</p>\n                </div>\n                <div className=\"summary-card\">\n                    <h3>Locations</h3>\n                    <p className=\"summary-number\">{analyticsData.jobsPerLocation?.length || 0}</p>\n                </div>\n                <div className=\"summary-card\">\n                    <h3>Avg. Salary Range</h3>\n                    <p className=\"summary-number\">\n                        ${analyticsData.averageSalary && analyticsData.averageSalary.length > 0\n                            ? Math.round(analyticsData.averageSalary.reduce((acc, val) => acc + val.avgMinSalary, 0) / analyticsData.averageSalary.length).toLocaleString()\n                            : 0}\n                        {\" - \"}\n                        ${analyticsData.averageSalary && analyticsData.averageSalary.length > 0\n                            ? Math.round(analyticsData.averageSalary.reduce((acc, val) => acc + val.avgMaxSalary, 0) / analyticsData.averageSalary.length).toLocaleString()\n                            : 0}\n                    </p>\n                </div>\n            </div>\n\n            <div className=\"charts-container\">\n                <div className=\"chart-card\">\n                    <h2>Jobs by Location</h2>\n                    {renderJobsPerLocationChart()}\n                </div>\n                <div className=\"chart-card\">\n                    <h2>In-Demand Skills</h2>\n                    {renderInDemandSkillsChart()}\n                </div>\n                <div className=\"chart-card\">\n                    <h2>Salary Analysis</h2>\n                    {renderSalaryAnalysisChart()}\n                </div>\n                <div className=\"chart-card\">\n                    <h2>Jobs Over Time</h2>\n                    {renderJobsOverTimeChart()}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AnalyticsDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}